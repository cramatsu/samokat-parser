services:
  db:
    image: arm64v8/postgres:13-alpine
    container_name: "postgres"
    restart: always
    environment:
      POSTGRES_DB: samokat_data
      POSTGRES_USER: mirea
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "PGPASSWORD=admin pg_isready -h localhost -p 5432 -U mirea -d samokat_data",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - envelope

  selenium-chrome:
    healthcheck:
      test: ["CMD", "curl", "-sSL", "http://localhost:4444/wd/hub/status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: always
    image: seleniarm/standalone-chromium:latest
    ports:
      - "4444:4444"
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - envelope

  django:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/app
    environment:
      DJANGO_SETTINGS_MODULE: samokat_app.settings
      DB_HOST: db
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: samokat_data
      DB_USER: mirea
      DB_PASSWORD: admin
      DB_PORT: 5432
      SELENIUM_HOST: selenium-chrome
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: poetry run python manage.py runserver 0.0.0.0:8000
    hostname: localhost
    networks:
      - envelope

volumes:
  postgres_data:

networks:
  envelope:
    name: envelope
